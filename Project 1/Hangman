
import random
import os

def clear():
    if os.system == 'nt':
        os.system('cls')
    else:
        if os.system('clear') != 0:
            print("\n" * 100)

#Function to print the hanged man after loosing
def print_hangman(values):
    print()
    print("\t   +--------+")
    print("\t   |      \\| |")
    print("\t  {}        | |".format(values[0]))
    print("\t{}{}{}        | |".format(values[1], values[2], values[3]))
    print("\t  {}        | |".format(values[4]))
    print("\t {}{}        | |".format(values[5], values[6]))
    print("\t           | |")
    print("\t___________|_|\\")
    print("\t````````````````")

#Function to print the hanged man after winning
def print_hangman_win():
    print()
    print("\t   +--------+")
    print("\t   |     \\| |")
    print("\t   0       | |")
    print("\t  \|/      | |")
    print("\t   |       | |")
    print("\t  / \      | |")
    print("\t           | |")
    print("\t___________|_|\\")
    print("\t````````````````")

#Printing the word to be guessed
def print_word(values):
    print()
    print(end="") #was print("\t_", end="")
    for x in values:
        print(x, end="")
        print()
    
#Checks for a win
def check_win(values):
    for char in values:
        if char == '_':
            return False
        return True
    
def   hangman_game(word):
    
    clear()

    word_display = []
    correct_letters = []
    incorrect = []
    chances = 0
    
    #Hangman's body    0   1   2   3    4    5   6
    hangman_values = ['0','/','|','\ ','|', '/','\ ']
    show_hangman_values = [' ',' ',' ',' ',' ',' ',' ']
    
    for char in word:
        if char.isalpha():
            word_display.append('_')
            correct_letters.append(char.upper())
        else:
            word_display.append(char)

    while True:

        print_hangman(show_hangman_values)
        print_word(word_display)
        print()
        print("Incorrect characters: ", incorrect)
        print()
        
        inp = input("Enter a character = ")
        if len(inp) != 1:
            clear()
            print("Wrong choice! Try again")
            continue
        
        if not inp[0].isalpha():
            clear()
            print("Wrong choice!! Try again")
            
        if inp.upper() in incorrect:
                clear()
                print("Already tried...")
                continue
        
        if inp.upper() not in correct_letters:
            incorrect.append(inp.upper())

            show_hangman_values[chances] = hangman_values[chances]
            chances = chances + 1

            if chances == len(hangman_values):
                print()
                clear()
                print("\tGAME OVERRRRRRRRR")
                print_hangman(hangman_values)
                print("The word is: ", word.upper())
                break

        else:
                  #ERROR AROUND HERE - CAUSING 1 LETTER CORRECTLY GUESSED
                  # = WINNING THE GAME... NOT IDEAL...
            for i in range(len(word)):
                if word[i].upper() == inp.upper():
                    word_display[i] = inp.upper()

            if check_win(word_display):
                  clear()
                  print("\tCongratulations! ")
                  print_hangman_win()
                  print("The word is: ", word.upper())
                  break
            clear()

if __name__ == "__main__":
    clear()

    topics = {1:"Fruit", 2:"Numbers"}

    dataset = {"Fruit":["apple","pear","orange"],"Numbers":["one","two","three"]}

    while True:
        
        print()
        print("-------------------------")
        print("\tGAME MENU")
        print("-------------------------")
        for key in topics:
            print("press", key, "to select", topics[key])
        print("Press", len(topics)+1, "to quit")
        print()

        try:
            choice = int(input("Enter your choice: "))
        except ValueError:
            clear()
            print("Wrong choice!!! Try again")
            continue
        
        if choice > len(topics)+1:
            clear()
            print("No such topic... Try again.")
            continue
        
        elif choice == len(topics)+1:
            print()
            print("Thank you for playing!")
            break
        
        chosen_topic = topics[choice]

        ran = random.choice(dataset[chosen_topic])

        hangman_game(ran)
                  

